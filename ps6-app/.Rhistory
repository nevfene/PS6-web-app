bar <- ggplot(data2015, aes(x = drug, y = usage, fill = drug)) + geom_bar(stat = "identity") +
ggtitle("Drug usage rate by substance per age group in 2015") +
labs(x = "Substances", y="Usage rate by percentage")
donut
bar
View(data2015)
donut <- ggplot(graphdata, aes(x = drug, y = usage)) +
coord_polar("y") +
ggtitle("Drug usage rate by substance per age group in 2015")
graphdata <- reactive ({
data2015 %>%
filter(Demographic == "Age") %>%
filter(`State: US` %in% input$Age_Range)
})
bar <- ggplot(graphdata(), aes(x = drug, y = usage, fill = drug)) + geom_bar(stat = "identity") +
ggtitle("Drug usage rate by substance per age group in 2015") +
labs(x = "Substances", y="Usage rate by percentage")
graphdata <- reactive ({
data2015 %>%
filter(Demographic == "Age") %>%
filter(`State: US` %in% input$Age_Range)
})
bar <- ggplot(graphdata, aes(x = drug, y = usage, fill = drug)) + geom_bar(stat = "identity") +
ggtitle("Drug usage rate by substance per age group in 2015") +
labs(x = "Substances", y="Usage rate by percentage")
library(tidyverse)
library(shiny)
library(ggplot2)
library(plotly)
data2015 <- read_delim("2015StatResults.csv")
data2015 <- gather(data2015, key = "drug", value = "usage", 3:7)
graphdata <- reactive ({
data2015 %>%
filter(Demographic == "Age") %>%
filter(`State: US` %in% input$Age_Range)
})
bar <- ggplot(graphdata(), aes(x = drug, y = usage, fill = drug)) + geom_bar(stat = "identity") +
ggtitle("Drug usage rate by substance per age group in 2015") +
labs(x = "Substances", y="Usage rate by percentage")
bar
donut
donut
donut <- ggplot(graphdata(), aes(x = drug, y = usage)) +
coord_polar("y") +
ggtitle("Drug usage rate by substance per age group in 2015")
shinyApp(ui = ui, server = server)
library(tidyverse)
library(shiny)
library(ggplot2)
library(plotly)
data2015 <- read_delim("2015StatResults.csv")
data2015 <- gather(data2015, key = "drug", value = "usage", 3:7)
graphdata <- reactive ({
data2015 %>%
filter(Demographic == "Age") %>%
filter(`State: US` %in% input$Age_Range)
})
bar <- ggplot(data2015, aes(x = drug, y = usage, fill = drug)) + geom_bar(stat = "identity") +
ggtitle("Drug usage rate by substance per age group in 2015") +
labs(x = "Substances", y="Usage rate by percentage")
donut <- ggplot(data2015, aes(x = drug, y = usage)) +
coord_polar("y") +
ggtitle("Drug usage rate by substance per age group in 2015")
bar
donut
bar
data2015 <- read_delim("2015StatResults.csv")
data2015 <- gather(data2015, key = "drug", value = "usage", 3:7)
graphdata <- reactive ({
data2015 %>%
filter(Demographic == "Age") %>%
filter(`State: US` %in% c("12-17 years","18-20 years"))
})
bar <- ggplot(data2015, aes(x = drug, y = usage, fill = drug)) + geom_bar(stat = "identity") +
ggtitle("Drug usage rate by substance per age group in 2015") +
labs(x = "Substances", y="Usage rate by percentage")
donut <- ggplot(data2015, aes(x = drug, y = usage)) +
coord_polar("y") +
ggtitle("Drug usage rate by substance per age group in 2015")
bar
donut
bar
donut <- ggplot(data2015, aes(x = drug, y = usage)) +
coord_polar("y") +
ggtitle("Drug usage rate by substance per age group in 2015")
donut
donut <- ggplot(data2015, aes(x = drug, fill = usage)) +
coord_polar("y") +
ggtitle("Drug usage rate by substance per age group in 2015")
donut
donut <- ggplot(data2015, aes(x = factor(drug), fill = factor(usage)) +
donut <- ggplot(data2015, aes(x = factor(drug), fill = factor(usage))) +
coord_polar("y") +
ggtitle("Drug usage rate by substance per age group in 2015")
donut
donut
donut <- ggplot(data2015, aes(x = factor(drug), fill = factor(usage))) +
coord_polar("y") +
ggtitle("Drug usage rate by substance per age group in 2015")
donut
output$barGraph <- renderPlot({
ggplot(data2015, aes(x = drug, y = usage, fill = drug)) + geom_bar(stat = "identity") +
ggtitle("Drug usage rate by substance per age group in 2015") +
labs(x = "Substances", y="Usage rate by percentage")
})
library(tidyverse)
library(shiny)
library(ggplot2)
library(plotly)
data2015 <- read_delim("2015StatResults.csv")
data2015 <- gather(data2015, key = "drug", value = "usage", 3:7)
# Define UI for application that draws a histogram
ui <- fluidPage(
titlePanel("Nev Fenelon, PS6"),
headerPanel("Statistics for Drug Usage"),
tabsetPanel(type = "tab",
tabPanel("Introduction to the Data",
mainPanel(
h3("This dataset contains measures drug usage across mulitple demographics
by percentage."),
p("There are 3 focus demographics with observations over 5 different substances,
as well as total usage."),
em("Data collected in 2015"),
h3("Here is a random sample from the data:"),
p("(Note that the following specified drugs do not make up all of the substances considered in the total.)"),
dataTableOutput("sample"),
p("I spent 7 hours on this problem  set"))),
tabPanel("Plot",
sidebarLayout(
sidebarPanel(
p("You can observe and compare the usage rates for different substances
betweeen different age groups"),
selectInput("Age_Range","Select age range:",
choices = c("12-17 years","18-20 years","21-25 years","26-30 years","31-35 years",
"36-40 years","41-45 years","46-50 years","51-55 years","56-60 years",
"61-65 years","66 years and over")),
p("View as a bar chart or donut graph?"),
selectInput("graphType", "Select graph type:",
choices = c("Bar chart", "Donut graph")),
),
mainPanel(
plotOutput("barGraph"),
#textOutput("obs")
))),
tabPanel("Data Table",
sidebarLayout(
sidebarPanel(
p("Choose one substance to compare the
highest and lowest usage rate per demographic group."),
selectInput("drugs", "Choose substance(s) to view",
choices = unique(data2015$drug))
),
mainPanel(
#textOutput("obs2"),
dataTableOutput("table")
)
)
)
)
)
server <- function(input, output) {
output$sample <- renderDataTable({
data2015 %>% sample_n(3)
})
#PAGE 2: PLOT BAR/DONUT GRAPH
graphdata <- reactive ({
data2015 %>%
filter(Demographic == "Age") %>%
filter(`State: US` %in% input$Age_Range)
})
output$barGraph <- renderPlot({
ggplot(data2015, aes(x = drug, y = usage, fill = drug)) + geom_bar(stat = "identity") +
ggtitle("Drug usage rate by substance per age group in 2015") +
labs(x = "Substances", y="Usage rate by percentage")
})
#PAGE 3: DATA TABLE
output$table <- renderDataTable({
data2015 %>%
filter(drug %in% input$drugs) %>%
group_by(Demographic) %>%
summarise(min(usage),
max(usage))
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$sample <- renderDataTable({
data2015 %>% sample_n(3)
})
#PAGE 2: PLOT BAR/DONUT GRAPH
graphdata <- reactive ({
data2015 %>%
filter(Demographic == "Age") %>%
filter(`State: US` %in% input$Age_Range)
})
output$barGraph <- renderPlot({
ggplot(graphdata(), aes(x = drug, y = usage, fill = drug)) + geom_bar(stat = "identity") +
ggtitle("Drug usage rate by substance per age group in 2015") +
labs(x = "Substances", y="Usage rate by percentage")
})
#PAGE 3: DATA TABLE
output$table <- renderDataTable({
data2015 %>%
filter(drug %in% input$drugs) %>%
group_by(Demographic) %>%
summarise(min(usage),
max(usage))
})
}
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(tidyverse)
library(shiny)
library(ggplot2)
library(plotly)
data2015 <- read_delim("2015StatResults.csv")
data2015 <- gather(data2015, key = "drug", value = "usage", 3:7)
# Define UI for application that draws a histogram
ui <- fluidPage(
titlePanel("Nev Fenelon, PS6"),
headerPanel("Statistics for Drug Usage"),
tabsetPanel(type = "tab",
tabPanel("Introduction to the Data",
mainPanel(
h3("This dataset contains measures drug usage across mulitple demographics
by percentage."),
p("There are 3 focus demographics with observations over 5 different substances,
as well as total usage."),
em("Data collected in 2015"),
h3("Here is a random sample from the data:"),
p("(Note that the following specified drugs do not make up all of the substances considered in the total.)"),
dataTableOutput("sample"),
p("I spent 7 hours on this problem  set"))),
tabPanel("Plot",
sidebarLayout(
sidebarPanel(
p("You can observe and compare the usage rates for different substances
betweeen different age groups"),
selectInput("Age_Range","Select age range:",
choices = c("12-17 years","18-20 years","21-25 years","26-30 years","31-35 years",
"36-40 years","41-45 years","46-50 years","51-55 years","56-60 years",
"61-65 years","66 years and over")),
p("View as a bar chart or donut graph?"),
selectInput("graphType", "Select graph type:",
choices = c("Bar chart", "Donut graph")),
),
mainPanel(
plotOutput("barGraph"),
#textOutput("obs")
))),
tabPanel("Data Table",
sidebarLayout(
sidebarPanel(
p("Choose one substance to compare the
highest and lowest usage rate per demographic group."),
selectInput("drugs", "Choose substance(s) to view",
choices = unique(data2015$drug))
),
mainPanel(
#textOutput("obs2"),
dataTableOutput("table")
)
)
)
)
)
server <- function(input, output) {
output$sample <- renderDataTable({
data2015 %>% sample_n(3)
})
#PAGE 2: PLOT BAR/DONUT GRAPH
graphdata <- reactive ({
data2015 %>%
filter(Demographic == "Age") %>%
filter(`State: US` %in% input$Age_Range)
})
output$barGraph <- renderPlot({
ggplot(graphdata(), aes(x = drug, y = usage, fill = drug)) + geom_bar(stat = "identity") +
ggtitle("Drug usage rate by substance per age group in 2015") +
labs(x = "Substances", y="Usage rate by percentage")
})
#PAGE 3: DATA TABLE
output$table <- renderDataTable({
data2015 %>%
filter(drug %in% input$drugs) %>%
group_by(Demographic) %>%
summarise(min(usage),
max(usage))
})
}
shinyApp(ui = ui, server = server)
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(tidyverse)
library(shiny)
library(ggplot2)
library(plotly)
data2015 <- read_delim("2015StatResults.csv")
data2015 <- gather(data2015, key = "drug", value = "usage", 3:7)
# Define UI for application that draws a histogram
ui <- fluidPage(
titlePanel("Nev Fenelon, PS6"),
headerPanel("Statistics for Drug Usage"),
tabsetPanel(type = "tab",
tabPanel("Introduction to the Data",
mainPanel(
h3("This dataset contains measures drug usage across mulitple demographics
by percentage."),
p("There are 3 focus demographics with observations over 5 different substances,
as well as total usage."),
em("Data collected in 2015"),
h3("Here is a random sample from the data:"),
p("(Note that the following specified drugs do not make up all of the substances considered in the total.)"),
dataTableOutput("sample"),
p("I spent 7 hours on this problem  set"))),
tabPanel("Plot",
sidebarLayout(
sidebarPanel(
p("You can observe and compare the usage rates for different substances
betweeen different age groups"),
selectInput("Age_Range","Select age range:",
choices = c("12-17 years","18-20 years","21-25 years","26-30 years","31-35 years",
"36-40 years","41-45 years","46-50 years","51-55 years","56-60 years",
"61-65 years","66 years and over")),
p("View as a bar chart or donut graph?"),
selectInput("graphType", "Select graph type:",
choices = c("Bar chart", "Donut graph")),
),
mainPanel(
plotOutput("barGraph"),
#textOutput("obs")
))),
tabPanel("Data Table",
sidebarLayout(
sidebarPanel(
p("Choose one substance to compare the
highest and lowest usage rate per demographic group."),
selectInput("drugs", "Choose substance(s) to view",
choices = unique(data2015$drug))
),
mainPanel(
#textOutput("obs2"),
dataTableOutput("table")
)
)
)
)
)
server <- function(input, output) {
output$sample <- renderDataTable({
data2015 %>% sample_n(3)
})
#PAGE 2: PLOT BAR/DONUT GRAPH
graphdata <- reactive ({
data2015 %>%
filter(Demographic == "Age") %>%
filter(`State: US` %in% input$Age_Range)
})
output$barGraph <- renderPlot({
ggplot(graphdata(), aes(x = drug, y = usage, fill = drug)) + geom_bar(stat = "identity") +
ggtitle("Drug usage rate by substance per age group in 2015") +
labs(x = "Substances", y="Usage rate by percentage")
})
#PAGE 3: DATA TABLE
output$table <- renderDataTable({
data2015 %>%
filter(drug %in% input$drugs) %>%
group_by(Demographic) %>%
summarise(min(usage),
max(usage))
})
}
shinyApp(ui = ui, server = server)
bar <- ggplot(data2015, aes(x = drug, y = usage, fill = drug)) + geom_bar(stat = "identity") +
ggtitle("Drug usage rate by substance per age group in 2015") +
geom_text((aes(label = scales::percent(value, accuracy = 1)))) +
labs(title = "Substance use by age",
subtitle = "Percent of usage by drug")
bar
library(tidyverse)
library(shiny)
library(ggplot2)
library(plotly)
data2015 <- read_delim("2015StatResults.csv")
data2015 <- gather(data2015, key = "drug", value = "usage", 3:7)
graphdata <- reactive ({
data2015 %>%
filter(Demographic == "Age") %>%
filter(`State: US` %in% c("12-17 years","18-20 years"))
})
bar <- ggplot(data2015, aes(x = drug, y = usage, fill = drug)) + geom_bar(stat = "identity") +
ggtitle("Drug usage rate by substance per age group in 2015") +
geom_text((aes(label = scales::percent(value, accuracy = 1)))) +
labs(title = "Substance use by age",
subtitle = "Percent of usage by drug")
bar
bar <- ggplot(data2015, aes(x = drug, y = usage, fill = drug)) + geom_bar(stat = "identity") +
ggtitle("Drug usage rate by substance per age group in 2015") +
geom_text((aes(label = scales::percent(usage, accuracy = 1)))) +
labs(title = "Substance use by age",
subtitle = "Percent of usage by drug")
donut
bar
output$barGraph <- renderPlot({
ggplot(graphdata(), aes(x = drug, y = usage, fill = drug)) + geom_bar(stat = "identity") +
#ggtitle("Drug usage rate by substance per age group in 2015") +
geom_text((aes(label = scales::percent(usage, accuracy = 1)))) +
labs(title = "Substance use by age",
subtitle = "Percent of usage by drug")
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(tidyverse)
library(shiny)
library(ggplot2)
library(plotly)
data2015 <- read_delim("2015StatResults.csv")
data2015 <- gather(data2015, key = "drug", value = "usage", 3:7)
# Define UI for application that draws a histogram
ui <- fluidPage(
titlePanel("Nev Fenelon, PS6"),
headerPanel("Statistics for Drug Usage"),
tabsetPanel(type = "tab",
tabPanel("Introduction to the Data",
mainPanel(
h3("This dataset contains measures drug usage across mulitple demographics
by percentage."),
p("There are 3 focus demographics with observations over 5 different substances,
as well as total usage."),
em("Data collected in 2015"),
h3("Here is a random sample from the data:"),
p("(Note that the following specified drugs do not make up all of the substances considered in the total.)"),
dataTableOutput("sample"),
p("I spent 7 hours on this problem  set"))),
tabPanel("Plot",
sidebarLayout(
sidebarPanel(
p("You can observe and compare the usage rates for different substances
betweeen different age groups"),
selectInput("Age_Range","Select age range:",
choices = c("12-17 years","18-20 years","21-25 years","26-30 years","31-35 years",
"36-40 years","41-45 years","46-50 years","51-55 years","56-60 years",
"61-65 years","66 years and over")),
p("View as a bar chart or donut graph?"),
selectInput("graphType", "Select graph type:",
choices = c("Bar chart", "Donut graph")),
),
mainPanel(
plotOutput("barGraph"),
#textOutput("obs")
))),
tabPanel("Data Table",
sidebarLayout(
sidebarPanel(
p("Choose one substance to compare the
highest and lowest usage rate per demographic group."),
selectInput("drugs", "Choose substance(s) to view",
choices = unique(data2015$drug))
),
mainPanel(
#textOutput("obs2"),
dataTableOutput("table")
)
)
)
)
)
server <- function(input, output) {
output$sample <- renderDataTable({
data2015 %>% sample_n(3)
})
#PAGE 2: PLOT BAR/DONUT GRAPH
graphdata <- reactive ({
data2015 %>%
filter(Demographic == "Age") %>%
filter(`State: US` %in% input$Age_Range)
})
output$barGraph <- renderPlot({
ggplot(graphdata(), aes(x = drug, y = usage, fill = drug)) + geom_bar(stat = "identity") +
#ggtitle("Drug usage rate by substance per age group in 2015") +
geom_text((aes(label = scales::percent(usage, accuracy = 1)))) +
labs(title = "Substance use by age",
subtitle = "Percent of usage by drug")
})
#PAGE 3: DATA TABLE
output$table <- renderDataTable({
data2015 %>%
filter(drug %in% input$drugs) %>%
group_by(Demographic) %>%
summarise(min(usage),
max(usage))
})
}
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
